1. Встраивание типов в структуру

2. Это не наследование, это композиция

При наследовании наследуемый тип получает возможности
родителя и также имеет тип родителя. Тип B является подтипом A. Отношение: is

При композиции тип A содержит тип B, за счет
чего также получает его возможности, но тип A так и
остается типом A. Отношение: has

3. Получение свойств, вызов методов. Shorthands

4. Shadowing and colliding с учетом глубины вложенности

5. Для чего нам встраивание?
а). Не дублировать код
б). писать более масштабируемый и поддерживаемый код

Встраивание (встраивание типов или встраивание структур) 
в Go (Golang) — это механизм, который позволяет включать одну структуру в другую, чтобы использовать её методы и 
поля без необходимости явной переадресации. Это похоже на наследование в объектно-ориентированных языках, 
но в Go это скорее способ композиции, чем наследование.